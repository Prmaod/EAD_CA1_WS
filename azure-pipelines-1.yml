# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: HelmInstaller@1
  inputs:
    helmVersionToInstall: 'latest'
  
- task: HelmDeploy@0
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscription: 'Pay-As-You-Go(1)(7fb8e137-cf36-47e9-a0de-a49cfd5ced2c)'
    azureResourceGroup: 'knolangroup'
    kubernetesCluster: 'knolanAKSCluster'
    useClusterAdmin: true
    command: 'init'

- task: Kubernetes@1
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'knolanAKSCluser'
    command: 'create'
    arguments: 'serviceaccount --namespace kube-system tiller'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'

- task: HelmDeploy@0
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscription: 'Pay-As-You-Go(1)(7fb8e137-cf36-47e9-a0de-a49cfd5ced2c)'
    azureResourceGroup: 'knolangroup'
    kubernetesCluster: 'knolanAKSCluster'
    useClusterAdmin: true
    command: 'repo'
    arguments: 'add stable https://kubernetes-charts.storage.googleapis.com/'

- task: HelmDeploy@0
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscription: 'Pay-As-You-Go(2)(7fb8e137-cf36-47e9-a0de-a49cfd5ced2c)'
    azureResourceGroup: 'knolangroup'
    kubernetesCluster: 'knolanAKSCluster'
    useClusterAdmin: true
    command: 'install'
    chartType: 'Name'
    chartName: 'stable/mysql'
    releaseName: 'my-sql-release'
